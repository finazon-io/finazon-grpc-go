// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: time_series.proto

package finazon_grpc_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open      float64 `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	Close     float64 `protobuf:"fixed64,3,opt,name=close,proto3" json:"close,omitempty"`
	High      float64 `protobuf:"fixed64,4,opt,name=high,proto3" json:"high,omitempty"`
	Low       float64 `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`
	Volume    float64 `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *TimeSeries) Reset() {
	*x = TimeSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeries) ProtoMessage() {}

func (x *TimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeries.ProtoReflect.Descriptor instead.
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{0}
}

func (x *TimeSeries) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TimeSeries) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *TimeSeries) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *TimeSeries) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *TimeSeries) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *TimeSeries) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type GetTimeSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publisher      string `protobuf:"bytes,1,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Ticker         string `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Exchange       string `protobuf:"bytes,3,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Mic            string `protobuf:"bytes,4,opt,name=mic,proto3" json:"mic,omitempty"`
	Country        string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	InstrumentType string `protobuf:"bytes,6,opt,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty"`
	Timezone       string `protobuf:"bytes,7,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Interval       string `protobuf:"bytes,8,opt,name=interval,proto3" json:"interval,omitempty"`
	StartAt        int64  `protobuf:"varint,10,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt          int64  `protobuf:"varint,11,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	Page           int32  `protobuf:"varint,12,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int32  `protobuf:"varint,13,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Order          string `protobuf:"bytes,14,opt,name=order,proto3" json:"order,omitempty"`
	Prepost        bool   `protobuf:"varint,15,opt,name=prepost,proto3" json:"prepost,omitempty"`
	Market         string `protobuf:"bytes,16,opt,name=market,proto3" json:"market,omitempty"`
	Dataset        string `protobuf:"bytes,17,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Cqs            string `protobuf:"bytes,18,opt,name=cqs,proto3" json:"cqs,omitempty"`
	Cik            string `protobuf:"bytes,19,opt,name=cik,proto3" json:"cik,omitempty"`
	Cusip          string `protobuf:"bytes,20,opt,name=cusip,proto3" json:"cusip,omitempty"`
	Isin           string `protobuf:"bytes,21,opt,name=isin,proto3" json:"isin,omitempty"`
	CompositeFigi  string `protobuf:"bytes,22,opt,name=composite_figi,json=compositeFigi,proto3" json:"composite_figi,omitempty"`
	ShareFigi      string `protobuf:"bytes,23,opt,name=share_figi,json=shareFigi,proto3" json:"share_figi,omitempty"`
	Lei            string `protobuf:"bytes,24,opt,name=lei,proto3" json:"lei,omitempty"`
	Adjust         string `protobuf:"bytes,25,opt,name=adjust,proto3" json:"adjust,omitempty"`
}

func (x *GetTimeSeriesRequest) Reset() {
	*x = GetTimeSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesRequest) ProtoMessage() {}

func (x *GetTimeSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{1}
}

func (x *GetTimeSeriesRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetMic() string {
	if x != nil {
		return x.Mic
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetInstrumentType() string {
	if x != nil {
		return x.InstrumentType
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetTimeSeriesRequest) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetTimeSeriesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTimeSeriesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetTimeSeriesRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetPrepost() bool {
	if x != nil {
		return x.Prepost
	}
	return false
}

func (x *GetTimeSeriesRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetCqs() string {
	if x != nil {
		return x.Cqs
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetCik() string {
	if x != nil {
		return x.Cik
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetCusip() string {
	if x != nil {
		return x.Cusip
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetCompositeFigi() string {
	if x != nil {
		return x.CompositeFigi
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetShareFigi() string {
	if x != nil {
		return x.ShareFigi
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetLei() string {
	if x != nil {
		return x.Lei
	}
	return ""
}

func (x *GetTimeSeriesRequest) GetAdjust() string {
	if x != nil {
		return x.Adjust
	}
	return ""
}

type GetTimeSeriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*TimeSeries `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesResponse) Reset() {
	*x = GetTimeSeriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesResponse) ProtoMessage() {}

func (x *GetTimeSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{2}
}

func (x *GetTimeSeriesResponse) GetResult() []*TimeSeries {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesAtrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimePeriod int32                 `protobuf:"varint,1,opt,name=time_period,json=timePeriod,proto3" json:"time_period,omitempty"`
	TimeSeries *GetTimeSeriesRequest `protobuf:"bytes,2,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesAtrRequest) Reset() {
	*x = GetTimeSeriesAtrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesAtrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesAtrRequest) ProtoMessage() {}

func (x *GetTimeSeriesAtrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesAtrRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesAtrRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{3}
}

func (x *GetTimeSeriesAtrRequest) GetTimePeriod() int32 {
	if x != nil {
		return x.TimePeriod
	}
	return 0
}

func (x *GetTimeSeriesAtrRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesAtrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesAtrResponse_Atr `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesAtrResponse) Reset() {
	*x = GetTimeSeriesAtrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesAtrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesAtrResponse) ProtoMessage() {}

func (x *GetTimeSeriesAtrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesAtrResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesAtrResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{4}
}

func (x *GetTimeSeriesAtrResponse) GetResult() []*GetTimeSeriesAtrResponse_Atr {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesBBandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimePeriod int32                 `protobuf:"varint,1,opt,name=time_period,json=timePeriod,proto3" json:"time_period,omitempty"`
	SeriesType string                `protobuf:"bytes,2,opt,name=series_type,json=seriesType,proto3" json:"series_type,omitempty"`
	Sd         float64               `protobuf:"fixed64,3,opt,name=sd,proto3" json:"sd,omitempty"`
	MaType     string                `protobuf:"bytes,4,opt,name=ma_type,json=maType,proto3" json:"ma_type,omitempty"`
	TimeSeries *GetTimeSeriesRequest `protobuf:"bytes,5,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesBBandsRequest) Reset() {
	*x = GetTimeSeriesBBandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesBBandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesBBandsRequest) ProtoMessage() {}

func (x *GetTimeSeriesBBandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesBBandsRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesBBandsRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{5}
}

func (x *GetTimeSeriesBBandsRequest) GetTimePeriod() int32 {
	if x != nil {
		return x.TimePeriod
	}
	return 0
}

func (x *GetTimeSeriesBBandsRequest) GetSeriesType() string {
	if x != nil {
		return x.SeriesType
	}
	return ""
}

func (x *GetTimeSeriesBBandsRequest) GetSd() float64 {
	if x != nil {
		return x.Sd
	}
	return 0
}

func (x *GetTimeSeriesBBandsRequest) GetMaType() string {
	if x != nil {
		return x.MaType
	}
	return ""
}

func (x *GetTimeSeriesBBandsRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesBBandsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesBBandsResponse_BBands `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesBBandsResponse) Reset() {
	*x = GetTimeSeriesBBandsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesBBandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesBBandsResponse) ProtoMessage() {}

func (x *GetTimeSeriesBBandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesBBandsResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesBBandsResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{6}
}

func (x *GetTimeSeriesBBandsResponse) GetResult() []*GetTimeSeriesBBandsResponse_BBands {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesIchimokuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversionLinePeriod   int32                 `protobuf:"varint,1,opt,name=conversion_line_period,json=conversionLinePeriod,proto3" json:"conversion_line_period,omitempty"`
	BaseLinePeriod         int32                 `protobuf:"varint,2,opt,name=base_line_period,json=baseLinePeriod,proto3" json:"base_line_period,omitempty"`
	LeadingSpanBPeriod     int32                 `protobuf:"varint,3,opt,name=leading_span_b_period,json=leadingSpanBPeriod,proto3" json:"leading_span_b_period,omitempty"`
	LaggingSpanPeriod      int32                 `protobuf:"varint,4,opt,name=lagging_span_period,json=laggingSpanPeriod,proto3" json:"lagging_span_period,omitempty"`
	IncludeAheadSpanPeriod bool                  `protobuf:"varint,5,opt,name=include_ahead_span_period,json=includeAheadSpanPeriod,proto3" json:"include_ahead_span_period,omitempty"`
	TimeSeries             *GetTimeSeriesRequest `protobuf:"bytes,6,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesIchimokuRequest) Reset() {
	*x = GetTimeSeriesIchimokuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesIchimokuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesIchimokuRequest) ProtoMessage() {}

func (x *GetTimeSeriesIchimokuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesIchimokuRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesIchimokuRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{7}
}

func (x *GetTimeSeriesIchimokuRequest) GetConversionLinePeriod() int32 {
	if x != nil {
		return x.ConversionLinePeriod
	}
	return 0
}

func (x *GetTimeSeriesIchimokuRequest) GetBaseLinePeriod() int32 {
	if x != nil {
		return x.BaseLinePeriod
	}
	return 0
}

func (x *GetTimeSeriesIchimokuRequest) GetLeadingSpanBPeriod() int32 {
	if x != nil {
		return x.LeadingSpanBPeriod
	}
	return 0
}

func (x *GetTimeSeriesIchimokuRequest) GetLaggingSpanPeriod() int32 {
	if x != nil {
		return x.LaggingSpanPeriod
	}
	return 0
}

func (x *GetTimeSeriesIchimokuRequest) GetIncludeAheadSpanPeriod() bool {
	if x != nil {
		return x.IncludeAheadSpanPeriod
	}
	return false
}

func (x *GetTimeSeriesIchimokuRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesIchimokuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesIchimokuResponse_Ichimoku `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesIchimokuResponse) Reset() {
	*x = GetTimeSeriesIchimokuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesIchimokuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesIchimokuResponse) ProtoMessage() {}

func (x *GetTimeSeriesIchimokuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesIchimokuResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesIchimokuResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{8}
}

func (x *GetTimeSeriesIchimokuResponse) GetResult() []*GetTimeSeriesIchimokuResponse_Ichimoku {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesMaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimePeriod int32                 `protobuf:"varint,1,opt,name=time_period,json=timePeriod,proto3" json:"time_period,omitempty"`
	SeriesType string                `protobuf:"bytes,2,opt,name=series_type,json=seriesType,proto3" json:"series_type,omitempty"`
	MaType     string                `protobuf:"bytes,3,opt,name=ma_type,json=maType,proto3" json:"ma_type,omitempty"`
	TimeSeries *GetTimeSeriesRequest `protobuf:"bytes,4,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesMaRequest) Reset() {
	*x = GetTimeSeriesMaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesMaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesMaRequest) ProtoMessage() {}

func (x *GetTimeSeriesMaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesMaRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesMaRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{9}
}

func (x *GetTimeSeriesMaRequest) GetTimePeriod() int32 {
	if x != nil {
		return x.TimePeriod
	}
	return 0
}

func (x *GetTimeSeriesMaRequest) GetSeriesType() string {
	if x != nil {
		return x.SeriesType
	}
	return ""
}

func (x *GetTimeSeriesMaRequest) GetMaType() string {
	if x != nil {
		return x.MaType
	}
	return ""
}

func (x *GetTimeSeriesMaRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesMaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesMaResponse_Ma `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesMaResponse) Reset() {
	*x = GetTimeSeriesMaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesMaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesMaResponse) ProtoMessage() {}

func (x *GetTimeSeriesMaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesMaResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesMaResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{10}
}

func (x *GetTimeSeriesMaResponse) GetResult() []*GetTimeSeriesMaResponse_Ma {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesMacdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeriesType   string                `protobuf:"bytes,1,opt,name=series_type,json=seriesType,proto3" json:"series_type,omitempty"`
	FastPeriod   int32                 `protobuf:"varint,2,opt,name=fast_period,json=fastPeriod,proto3" json:"fast_period,omitempty"`
	SlowPeriod   int32                 `protobuf:"varint,3,opt,name=slow_period,json=slowPeriod,proto3" json:"slow_period,omitempty"`
	SignalPeriod int32                 `protobuf:"varint,4,opt,name=signal_period,json=signalPeriod,proto3" json:"signal_period,omitempty"`
	TimeSeries   *GetTimeSeriesRequest `protobuf:"bytes,5,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesMacdRequest) Reset() {
	*x = GetTimeSeriesMacdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesMacdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesMacdRequest) ProtoMessage() {}

func (x *GetTimeSeriesMacdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesMacdRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesMacdRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{11}
}

func (x *GetTimeSeriesMacdRequest) GetSeriesType() string {
	if x != nil {
		return x.SeriesType
	}
	return ""
}

func (x *GetTimeSeriesMacdRequest) GetFastPeriod() int32 {
	if x != nil {
		return x.FastPeriod
	}
	return 0
}

func (x *GetTimeSeriesMacdRequest) GetSlowPeriod() int32 {
	if x != nil {
		return x.SlowPeriod
	}
	return 0
}

func (x *GetTimeSeriesMacdRequest) GetSignalPeriod() int32 {
	if x != nil {
		return x.SignalPeriod
	}
	return 0
}

func (x *GetTimeSeriesMacdRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesMacdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesMacdResponse_Macd `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesMacdResponse) Reset() {
	*x = GetTimeSeriesMacdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesMacdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesMacdResponse) ProtoMessage() {}

func (x *GetTimeSeriesMacdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesMacdResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesMacdResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{12}
}

func (x *GetTimeSeriesMacdResponse) GetResult() []*GetTimeSeriesMacdResponse_Macd {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesObvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeriesType string                `protobuf:"bytes,1,opt,name=series_type,json=seriesType,proto3" json:"series_type,omitempty"`
	TimeSeries *GetTimeSeriesRequest `protobuf:"bytes,2,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesObvRequest) Reset() {
	*x = GetTimeSeriesObvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesObvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesObvRequest) ProtoMessage() {}

func (x *GetTimeSeriesObvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesObvRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesObvRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{13}
}

func (x *GetTimeSeriesObvRequest) GetSeriesType() string {
	if x != nil {
		return x.SeriesType
	}
	return ""
}

func (x *GetTimeSeriesObvRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesObvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesObvResponse_Obv `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesObvResponse) Reset() {
	*x = GetTimeSeriesObvResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesObvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesObvResponse) ProtoMessage() {}

func (x *GetTimeSeriesObvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesObvResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesObvResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{14}
}

func (x *GetTimeSeriesObvResponse) GetResult() []*GetTimeSeriesObvResponse_Obv {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesRsiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimePeriod int32                 `protobuf:"varint,1,opt,name=time_period,json=timePeriod,proto3" json:"time_period,omitempty"`
	SeriesType string                `protobuf:"bytes,2,opt,name=series_type,json=seriesType,proto3" json:"series_type,omitempty"`
	TimeSeries *GetTimeSeriesRequest `protobuf:"bytes,3,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesRsiRequest) Reset() {
	*x = GetTimeSeriesRsiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesRsiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesRsiRequest) ProtoMessage() {}

func (x *GetTimeSeriesRsiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesRsiRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesRsiRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{15}
}

func (x *GetTimeSeriesRsiRequest) GetTimePeriod() int32 {
	if x != nil {
		return x.TimePeriod
	}
	return 0
}

func (x *GetTimeSeriesRsiRequest) GetSeriesType() string {
	if x != nil {
		return x.SeriesType
	}
	return ""
}

func (x *GetTimeSeriesRsiRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesRsiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesRsiResponse_Rsi `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesRsiResponse) Reset() {
	*x = GetTimeSeriesRsiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesRsiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesRsiResponse) ProtoMessage() {}

func (x *GetTimeSeriesRsiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesRsiResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesRsiResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{16}
}

func (x *GetTimeSeriesRsiResponse) GetResult() []*GetTimeSeriesRsiResponse_Rsi {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesSarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acceleration float64               `protobuf:"fixed64,1,opt,name=acceleration,proto3" json:"acceleration,omitempty"`
	Maximum      float64               `protobuf:"fixed64,2,opt,name=maximum,proto3" json:"maximum,omitempty"`
	TimeSeries   *GetTimeSeriesRequest `protobuf:"bytes,3,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesSarRequest) Reset() {
	*x = GetTimeSeriesSarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesSarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesSarRequest) ProtoMessage() {}

func (x *GetTimeSeriesSarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesSarRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesSarRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{17}
}

func (x *GetTimeSeriesSarRequest) GetAcceleration() float64 {
	if x != nil {
		return x.Acceleration
	}
	return 0
}

func (x *GetTimeSeriesSarRequest) GetMaximum() float64 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

func (x *GetTimeSeriesSarRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesSarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesSarResponse_Sar `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesSarResponse) Reset() {
	*x = GetTimeSeriesSarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesSarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesSarResponse) ProtoMessage() {}

func (x *GetTimeSeriesSarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesSarResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesSarResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{18}
}

func (x *GetTimeSeriesSarResponse) GetResult() []*GetTimeSeriesSarResponse_Sar {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesStochRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FastKPeriod int32                 `protobuf:"varint,1,opt,name=fast_k_period,json=fastKPeriod,proto3" json:"fast_k_period,omitempty"`
	SlowKPeriod int32                 `protobuf:"varint,2,opt,name=slow_k_period,json=slowKPeriod,proto3" json:"slow_k_period,omitempty"`
	SlowDPeriod int32                 `protobuf:"varint,3,opt,name=slow_d_period,json=slowDPeriod,proto3" json:"slow_d_period,omitempty"`
	SlowKmaType string                `protobuf:"bytes,4,opt,name=slow_kma_type,json=slowKmaType,proto3" json:"slow_kma_type,omitempty"`
	SlowDmaType string                `protobuf:"bytes,5,opt,name=slow_dma_type,json=slowDmaType,proto3" json:"slow_dma_type,omitempty"`
	TimeSeries  *GetTimeSeriesRequest `protobuf:"bytes,6,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GetTimeSeriesStochRequest) Reset() {
	*x = GetTimeSeriesStochRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesStochRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesStochRequest) ProtoMessage() {}

func (x *GetTimeSeriesStochRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesStochRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesStochRequest) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{19}
}

func (x *GetTimeSeriesStochRequest) GetFastKPeriod() int32 {
	if x != nil {
		return x.FastKPeriod
	}
	return 0
}

func (x *GetTimeSeriesStochRequest) GetSlowKPeriod() int32 {
	if x != nil {
		return x.SlowKPeriod
	}
	return 0
}

func (x *GetTimeSeriesStochRequest) GetSlowDPeriod() int32 {
	if x != nil {
		return x.SlowDPeriod
	}
	return 0
}

func (x *GetTimeSeriesStochRequest) GetSlowKmaType() string {
	if x != nil {
		return x.SlowKmaType
	}
	return ""
}

func (x *GetTimeSeriesStochRequest) GetSlowDmaType() string {
	if x != nil {
		return x.SlowDmaType
	}
	return ""
}

func (x *GetTimeSeriesStochRequest) GetTimeSeries() *GetTimeSeriesRequest {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

type GetTimeSeriesStochResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetTimeSeriesStochResponse_Stoch `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTimeSeriesStochResponse) Reset() {
	*x = GetTimeSeriesStochResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesStochResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesStochResponse) ProtoMessage() {}

func (x *GetTimeSeriesStochResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesStochResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesStochResponse) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{20}
}

func (x *GetTimeSeriesStochResponse) GetResult() []*GetTimeSeriesStochResponse_Stoch {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetTimeSeriesAtrResponse_Atr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Atr       string `protobuf:"bytes,2,opt,name=atr,proto3" json:"atr,omitempty"`
}

func (x *GetTimeSeriesAtrResponse_Atr) Reset() {
	*x = GetTimeSeriesAtrResponse_Atr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesAtrResponse_Atr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesAtrResponse_Atr) ProtoMessage() {}

func (x *GetTimeSeriesAtrResponse_Atr) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesAtrResponse_Atr.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesAtrResponse_Atr) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetTimeSeriesAtrResponse_Atr) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesAtrResponse_Atr) GetAtr() string {
	if x != nil {
		return x.Atr
	}
	return ""
}

type GetTimeSeriesBBandsResponse_BBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UpperBand  string `protobuf:"bytes,2,opt,name=upper_band,json=upperBand,proto3" json:"upper_band,omitempty"`
	MiddleBand string `protobuf:"bytes,3,opt,name=middle_band,json=middleBand,proto3" json:"middle_band,omitempty"`
	LowerBand  string `protobuf:"bytes,4,opt,name=lower_band,json=lowerBand,proto3" json:"lower_band,omitempty"`
}

func (x *GetTimeSeriesBBandsResponse_BBands) Reset() {
	*x = GetTimeSeriesBBandsResponse_BBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesBBandsResponse_BBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesBBandsResponse_BBands) ProtoMessage() {}

func (x *GetTimeSeriesBBandsResponse_BBands) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesBBandsResponse_BBands.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesBBandsResponse_BBands) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetTimeSeriesBBandsResponse_BBands) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesBBandsResponse_BBands) GetUpperBand() string {
	if x != nil {
		return x.UpperBand
	}
	return ""
}

func (x *GetTimeSeriesBBandsResponse_BBands) GetMiddleBand() string {
	if x != nil {
		return x.MiddleBand
	}
	return ""
}

func (x *GetTimeSeriesBBandsResponse_BBands) GetLowerBand() string {
	if x != nil {
		return x.LowerBand
	}
	return ""
}

type GetTimeSeriesIchimokuResponse_Ichimoku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TenkanSen   string `protobuf:"bytes,2,opt,name=tenkan_sen,json=tenkanSen,proto3" json:"tenkan_sen,omitempty"`
	KijunSen    string `protobuf:"bytes,3,opt,name=kijun_sen,json=kijunSen,proto3" json:"kijun_sen,omitempty"`
	SenkouSpanA string `protobuf:"bytes,4,opt,name=senkou_span_a,json=senkouSpanA,proto3" json:"senkou_span_a,omitempty"`
	SenkouSpanB string `protobuf:"bytes,5,opt,name=senkou_span_b,json=senkouSpanB,proto3" json:"senkou_span_b,omitempty"`
	ChikouSpan  string `protobuf:"bytes,6,opt,name=chikou_span,json=chikouSpan,proto3" json:"chikou_span,omitempty"`
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) Reset() {
	*x = GetTimeSeriesIchimokuResponse_Ichimoku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesIchimokuResponse_Ichimoku) ProtoMessage() {}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesIchimokuResponse_Ichimoku.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesIchimokuResponse_Ichimoku) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) GetTenkanSen() string {
	if x != nil {
		return x.TenkanSen
	}
	return ""
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) GetKijunSen() string {
	if x != nil {
		return x.KijunSen
	}
	return ""
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) GetSenkouSpanA() string {
	if x != nil {
		return x.SenkouSpanA
	}
	return ""
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) GetSenkouSpanB() string {
	if x != nil {
		return x.SenkouSpanB
	}
	return ""
}

func (x *GetTimeSeriesIchimokuResponse_Ichimoku) GetChikouSpan() string {
	if x != nil {
		return x.ChikouSpan
	}
	return ""
}

type GetTimeSeriesMaResponse_Ma struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Ma        string `protobuf:"bytes,2,opt,name=ma,proto3" json:"ma,omitempty"`
}

func (x *GetTimeSeriesMaResponse_Ma) Reset() {
	*x = GetTimeSeriesMaResponse_Ma{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesMaResponse_Ma) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesMaResponse_Ma) ProtoMessage() {}

func (x *GetTimeSeriesMaResponse_Ma) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesMaResponse_Ma.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesMaResponse_Ma) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetTimeSeriesMaResponse_Ma) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesMaResponse_Ma) GetMa() string {
	if x != nil {
		return x.Ma
	}
	return ""
}

type GetTimeSeriesMacdResponse_Macd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Macd       string `protobuf:"bytes,2,opt,name=macd,proto3" json:"macd,omitempty"`
	MacdSignal string `protobuf:"bytes,3,opt,name=macd_signal,json=macdSignal,proto3" json:"macd_signal,omitempty"`
	MacdHist   string `protobuf:"bytes,4,opt,name=macd_hist,json=macdHist,proto3" json:"macd_hist,omitempty"`
}

func (x *GetTimeSeriesMacdResponse_Macd) Reset() {
	*x = GetTimeSeriesMacdResponse_Macd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesMacdResponse_Macd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesMacdResponse_Macd) ProtoMessage() {}

func (x *GetTimeSeriesMacdResponse_Macd) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesMacdResponse_Macd.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesMacdResponse_Macd) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetTimeSeriesMacdResponse_Macd) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesMacdResponse_Macd) GetMacd() string {
	if x != nil {
		return x.Macd
	}
	return ""
}

func (x *GetTimeSeriesMacdResponse_Macd) GetMacdSignal() string {
	if x != nil {
		return x.MacdSignal
	}
	return ""
}

func (x *GetTimeSeriesMacdResponse_Macd) GetMacdHist() string {
	if x != nil {
		return x.MacdHist
	}
	return ""
}

type GetTimeSeriesObvResponse_Obv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Obv       string `protobuf:"bytes,2,opt,name=obv,proto3" json:"obv,omitempty"`
}

func (x *GetTimeSeriesObvResponse_Obv) Reset() {
	*x = GetTimeSeriesObvResponse_Obv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesObvResponse_Obv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesObvResponse_Obv) ProtoMessage() {}

func (x *GetTimeSeriesObvResponse_Obv) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesObvResponse_Obv.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesObvResponse_Obv) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetTimeSeriesObvResponse_Obv) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesObvResponse_Obv) GetObv() string {
	if x != nil {
		return x.Obv
	}
	return ""
}

type GetTimeSeriesRsiResponse_Rsi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Rsi       string `protobuf:"bytes,2,opt,name=rsi,proto3" json:"rsi,omitempty"`
}

func (x *GetTimeSeriesRsiResponse_Rsi) Reset() {
	*x = GetTimeSeriesRsiResponse_Rsi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesRsiResponse_Rsi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesRsiResponse_Rsi) ProtoMessage() {}

func (x *GetTimeSeriesRsiResponse_Rsi) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesRsiResponse_Rsi.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesRsiResponse_Rsi) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetTimeSeriesRsiResponse_Rsi) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesRsiResponse_Rsi) GetRsi() string {
	if x != nil {
		return x.Rsi
	}
	return ""
}

type GetTimeSeriesSarResponse_Sar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sar       string `protobuf:"bytes,2,opt,name=sar,proto3" json:"sar,omitempty"`
}

func (x *GetTimeSeriesSarResponse_Sar) Reset() {
	*x = GetTimeSeriesSarResponse_Sar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesSarResponse_Sar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesSarResponse_Sar) ProtoMessage() {}

func (x *GetTimeSeriesSarResponse_Sar) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesSarResponse_Sar.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesSarResponse_Sar) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetTimeSeriesSarResponse_Sar) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesSarResponse_Sar) GetSar() string {
	if x != nil {
		return x.Sar
	}
	return ""
}

type GetTimeSeriesStochResponse_Stoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SlowK     string `protobuf:"bytes,2,opt,name=slow_k,json=slowK,proto3" json:"slow_k,omitempty"`
	SlowD     string `protobuf:"bytes,3,opt,name=slow_d,json=slowD,proto3" json:"slow_d,omitempty"`
}

func (x *GetTimeSeriesStochResponse_Stoch) Reset() {
	*x = GetTimeSeriesStochResponse_Stoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_series_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesStochResponse_Stoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesStochResponse_Stoch) ProtoMessage() {}

func (x *GetTimeSeriesStochResponse_Stoch) ProtoReflect() protoreflect.Message {
	mi := &file_time_series_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesStochResponse_Stoch.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesStochResponse_Stoch) Descriptor() ([]byte, []int) {
	return file_time_series_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetTimeSeriesStochResponse_Stoch) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTimeSeriesStochResponse_Stoch) GetSlowK() string {
	if x != nil {
		return x.SlowK
	}
	return ""
}

func (x *GetTimeSeriesStochResponse_Stoch) GetSlowD() string {
	if x != nil {
		return x.SlowD
	}
	return ""
}

var File_time_series_proto protoreflect.FileDescriptor

var file_time_series_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a,
	0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x22, 0x84, 0x05, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x71, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x71, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x75, 0x73, 0x69, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x75, 0x73, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x69, 0x6e,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x67, 0x69, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x46,
	0x69, 0x67, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x69, 0x67,
	0x69, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69,
	0x67, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x69, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x65, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x09,
	0x10, 0x0a, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x44, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41,
	0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x74, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41,
	0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x74, 0x72, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x35, 0x0a, 0x03, 0x41, 0x74, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x74, 0x72, 0x22, 0xc7, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x42, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x42, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x42,
	0x61, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x85, 0x01, 0x0a,
	0x06, 0x42, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62,
	0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x62,
	0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62,
	0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x64, 0x22, 0xdc, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x63, 0x68, 0x69, 0x6d, 0x6f, 0x6b, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x62, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x61,
	0x6e, 0x42, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x70,
	0x61, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x61, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x41, 0x68, 0x65, 0x61, 0x64, 0x53, 0x70, 0x61, 0x6e, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x63, 0x68, 0x69, 0x6d, 0x6f, 0x6b, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x63, 0x68,
	0x69, 0x6d, 0x6f, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x63,
	0x68, 0x69, 0x6d, 0x6f, 0x6b, 0x75, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0xcd,
	0x01, 0x0a, 0x08, 0x49, 0x63, 0x68, 0x69, 0x6d, 0x6f, 0x6b, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x6e,
	0x6b, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x65, 0x6e, 0x6b, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x6a, 0x75,
	0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x69, 0x6a,
	0x75, 0x6e, 0x53, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x6b, 0x6f, 0x75, 0x5f,
	0x73, 0x70, 0x61, 0x6e, 0x5f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x6e, 0x6b, 0x6f, 0x75, 0x53, 0x70, 0x61, 0x6e, 0x41, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6e,
	0x6b, 0x6f, 0x75, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x6e, 0x6b, 0x6f, 0x75, 0x53, 0x70, 0x61, 0x6e, 0x42, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x68, 0x69, 0x6b, 0x6f, 0x75, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x69, 0x6b, 0x6f, 0x75, 0x53, 0x70, 0x61, 0x6e, 0x22, 0xb3,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x4d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x32, 0x0a,
	0x02, 0x4d, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d,
	0x61, 0x22, 0xe2, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4d, 0x61, 0x63, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x61, 0x73, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x63, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x63, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x64, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x76, 0x0a, 0x04, 0x4d, 0x61, 0x63, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x63, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x63, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x64, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x64, 0x48, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x62,
	0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x62, 0x76, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x62,
	0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x76, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x35, 0x0a, 0x03, 0x4f, 0x62, 0x76, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x62,
	0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x62, 0x76, 0x22, 0x9b, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x73,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x73, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x73, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x73, 0x69, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x35, 0x0a, 0x03, 0x52, 0x73, 0x69, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x73, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x73, 0x69, 0x22, 0x97, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x1a, 0x35, 0x0a, 0x03, 0x53, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x61, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x61, 0x72, 0x22, 0x8f, 0x02, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x61, 0x73, 0x74,
	0x5f, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x66, 0x61, 0x73, 0x74, 0x4b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6c, 0x6f, 0x77, 0x4b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6c, 0x6f, 0x77, 0x44, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x6b, 0x6d, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6c, 0x6f,
	0x77, 0x4b, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c, 0x6f, 0x77,
	0x5f, 0x64, 0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x6c, 0x6f, 0x77, 0x44, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xb4, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74,
	0x6f, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x53,
	0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x77, 0x4b, 0x12, 0x15, 0x0a, 0x06,
	0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6c,
	0x6f, 0x77, 0x44, 0x32, 0xb6, 0x07, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x74, 0x72, 0x12,
	0x20, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x23, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x42, 0x61, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x63, 0x68, 0x69, 0x6d,
	0x6f, 0x6b, 0x75, 0x12, 0x25, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x63, 0x68, 0x69, 0x6d,
	0x6f, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x49, 0x63, 0x68, 0x69, 0x6d, 0x6f, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x12, 0x1f, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x4d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x63,
	0x64, 0x12, 0x21, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x63, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x61, 0x63, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x62, 0x76, 0x12, 0x20,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x62, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x62, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x73, 0x69, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x73, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x73, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x53, 0x61, 0x72, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x63,
	0x68, 0x12, 0x22, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x7a, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_time_series_proto_rawDescOnce sync.Once
	file_time_series_proto_rawDescData = file_time_series_proto_rawDesc
)

func file_time_series_proto_rawDescGZIP() []byte {
	file_time_series_proto_rawDescOnce.Do(func() {
		file_time_series_proto_rawDescData = protoimpl.X.CompressGZIP(file_time_series_proto_rawDescData)
	})
	return file_time_series_proto_rawDescData
}

var file_time_series_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_time_series_proto_goTypes = []interface{}{
	(*TimeSeries)(nil),                             // 0: finazon.TimeSeries
	(*GetTimeSeriesRequest)(nil),                   // 1: finazon.GetTimeSeriesRequest
	(*GetTimeSeriesResponse)(nil),                  // 2: finazon.GetTimeSeriesResponse
	(*GetTimeSeriesAtrRequest)(nil),                // 3: finazon.GetTimeSeriesAtrRequest
	(*GetTimeSeriesAtrResponse)(nil),               // 4: finazon.GetTimeSeriesAtrResponse
	(*GetTimeSeriesBBandsRequest)(nil),             // 5: finazon.GetTimeSeriesBBandsRequest
	(*GetTimeSeriesBBandsResponse)(nil),            // 6: finazon.GetTimeSeriesBBandsResponse
	(*GetTimeSeriesIchimokuRequest)(nil),           // 7: finazon.GetTimeSeriesIchimokuRequest
	(*GetTimeSeriesIchimokuResponse)(nil),          // 8: finazon.GetTimeSeriesIchimokuResponse
	(*GetTimeSeriesMaRequest)(nil),                 // 9: finazon.GetTimeSeriesMaRequest
	(*GetTimeSeriesMaResponse)(nil),                // 10: finazon.GetTimeSeriesMaResponse
	(*GetTimeSeriesMacdRequest)(nil),               // 11: finazon.GetTimeSeriesMacdRequest
	(*GetTimeSeriesMacdResponse)(nil),              // 12: finazon.GetTimeSeriesMacdResponse
	(*GetTimeSeriesObvRequest)(nil),                // 13: finazon.GetTimeSeriesObvRequest
	(*GetTimeSeriesObvResponse)(nil),               // 14: finazon.GetTimeSeriesObvResponse
	(*GetTimeSeriesRsiRequest)(nil),                // 15: finazon.GetTimeSeriesRsiRequest
	(*GetTimeSeriesRsiResponse)(nil),               // 16: finazon.GetTimeSeriesRsiResponse
	(*GetTimeSeriesSarRequest)(nil),                // 17: finazon.GetTimeSeriesSarRequest
	(*GetTimeSeriesSarResponse)(nil),               // 18: finazon.GetTimeSeriesSarResponse
	(*GetTimeSeriesStochRequest)(nil),              // 19: finazon.GetTimeSeriesStochRequest
	(*GetTimeSeriesStochResponse)(nil),             // 20: finazon.GetTimeSeriesStochResponse
	(*GetTimeSeriesAtrResponse_Atr)(nil),           // 21: finazon.GetTimeSeriesAtrResponse.Atr
	(*GetTimeSeriesBBandsResponse_BBands)(nil),     // 22: finazon.GetTimeSeriesBBandsResponse.BBands
	(*GetTimeSeriesIchimokuResponse_Ichimoku)(nil), // 23: finazon.GetTimeSeriesIchimokuResponse.Ichimoku
	(*GetTimeSeriesMaResponse_Ma)(nil),             // 24: finazon.GetTimeSeriesMaResponse.Ma
	(*GetTimeSeriesMacdResponse_Macd)(nil),         // 25: finazon.GetTimeSeriesMacdResponse.Macd
	(*GetTimeSeriesObvResponse_Obv)(nil),           // 26: finazon.GetTimeSeriesObvResponse.Obv
	(*GetTimeSeriesRsiResponse_Rsi)(nil),           // 27: finazon.GetTimeSeriesRsiResponse.Rsi
	(*GetTimeSeriesSarResponse_Sar)(nil),           // 28: finazon.GetTimeSeriesSarResponse.Sar
	(*GetTimeSeriesStochResponse_Stoch)(nil),       // 29: finazon.GetTimeSeriesStochResponse.Stoch
}
var file_time_series_proto_depIdxs = []int32{
	0,  // 0: finazon.GetTimeSeriesResponse.result:type_name -> finazon.TimeSeries
	1,  // 1: finazon.GetTimeSeriesAtrRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	21, // 2: finazon.GetTimeSeriesAtrResponse.result:type_name -> finazon.GetTimeSeriesAtrResponse.Atr
	1,  // 3: finazon.GetTimeSeriesBBandsRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	22, // 4: finazon.GetTimeSeriesBBandsResponse.result:type_name -> finazon.GetTimeSeriesBBandsResponse.BBands
	1,  // 5: finazon.GetTimeSeriesIchimokuRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	23, // 6: finazon.GetTimeSeriesIchimokuResponse.result:type_name -> finazon.GetTimeSeriesIchimokuResponse.Ichimoku
	1,  // 7: finazon.GetTimeSeriesMaRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	24, // 8: finazon.GetTimeSeriesMaResponse.result:type_name -> finazon.GetTimeSeriesMaResponse.Ma
	1,  // 9: finazon.GetTimeSeriesMacdRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	25, // 10: finazon.GetTimeSeriesMacdResponse.result:type_name -> finazon.GetTimeSeriesMacdResponse.Macd
	1,  // 11: finazon.GetTimeSeriesObvRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	26, // 12: finazon.GetTimeSeriesObvResponse.result:type_name -> finazon.GetTimeSeriesObvResponse.Obv
	1,  // 13: finazon.GetTimeSeriesRsiRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	27, // 14: finazon.GetTimeSeriesRsiResponse.result:type_name -> finazon.GetTimeSeriesRsiResponse.Rsi
	1,  // 15: finazon.GetTimeSeriesSarRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	28, // 16: finazon.GetTimeSeriesSarResponse.result:type_name -> finazon.GetTimeSeriesSarResponse.Sar
	1,  // 17: finazon.GetTimeSeriesStochRequest.time_series:type_name -> finazon.GetTimeSeriesRequest
	29, // 18: finazon.GetTimeSeriesStochResponse.result:type_name -> finazon.GetTimeSeriesStochResponse.Stoch
	1,  // 19: finazon.TimeSeriesService.GetTimeSeries:input_type -> finazon.GetTimeSeriesRequest
	3,  // 20: finazon.TimeSeriesService.GetTimeSeriesAtr:input_type -> finazon.GetTimeSeriesAtrRequest
	5,  // 21: finazon.TimeSeriesService.GetTimeSeriesBBands:input_type -> finazon.GetTimeSeriesBBandsRequest
	7,  // 22: finazon.TimeSeriesService.GetTimeSeriesIchimoku:input_type -> finazon.GetTimeSeriesIchimokuRequest
	9,  // 23: finazon.TimeSeriesService.GetTimeSeriesMa:input_type -> finazon.GetTimeSeriesMaRequest
	11, // 24: finazon.TimeSeriesService.GetTimeSeriesMacd:input_type -> finazon.GetTimeSeriesMacdRequest
	13, // 25: finazon.TimeSeriesService.GetTimeSeriesObv:input_type -> finazon.GetTimeSeriesObvRequest
	15, // 26: finazon.TimeSeriesService.GetTimeSeriesRsi:input_type -> finazon.GetTimeSeriesRsiRequest
	17, // 27: finazon.TimeSeriesService.GetTimeSeriesSar:input_type -> finazon.GetTimeSeriesSarRequest
	19, // 28: finazon.TimeSeriesService.GetTimeSeriesStoch:input_type -> finazon.GetTimeSeriesStochRequest
	2,  // 29: finazon.TimeSeriesService.GetTimeSeries:output_type -> finazon.GetTimeSeriesResponse
	4,  // 30: finazon.TimeSeriesService.GetTimeSeriesAtr:output_type -> finazon.GetTimeSeriesAtrResponse
	6,  // 31: finazon.TimeSeriesService.GetTimeSeriesBBands:output_type -> finazon.GetTimeSeriesBBandsResponse
	8,  // 32: finazon.TimeSeriesService.GetTimeSeriesIchimoku:output_type -> finazon.GetTimeSeriesIchimokuResponse
	10, // 33: finazon.TimeSeriesService.GetTimeSeriesMa:output_type -> finazon.GetTimeSeriesMaResponse
	12, // 34: finazon.TimeSeriesService.GetTimeSeriesMacd:output_type -> finazon.GetTimeSeriesMacdResponse
	14, // 35: finazon.TimeSeriesService.GetTimeSeriesObv:output_type -> finazon.GetTimeSeriesObvResponse
	16, // 36: finazon.TimeSeriesService.GetTimeSeriesRsi:output_type -> finazon.GetTimeSeriesRsiResponse
	18, // 37: finazon.TimeSeriesService.GetTimeSeriesSar:output_type -> finazon.GetTimeSeriesSarResponse
	20, // 38: finazon.TimeSeriesService.GetTimeSeriesStoch:output_type -> finazon.GetTimeSeriesStochResponse
	29, // [29:39] is the sub-list for method output_type
	19, // [19:29] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_time_series_proto_init() }
func file_time_series_proto_init() {
	if File_time_series_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_time_series_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesAtrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesAtrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesBBandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesBBandsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesIchimokuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesIchimokuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesMaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesMaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesMacdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesMacdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesObvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesObvResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesRsiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesRsiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesSarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesSarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesStochRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesStochResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesAtrResponse_Atr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesBBandsResponse_BBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesIchimokuResponse_Ichimoku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesMaResponse_Ma); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesMacdResponse_Macd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesObvResponse_Obv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesRsiResponse_Rsi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesSarResponse_Sar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_series_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesStochResponse_Stoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_time_series_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_time_series_proto_goTypes,
		DependencyIndexes: file_time_series_proto_depIdxs,
		MessageInfos:      file_time_series_proto_msgTypes,
	}.Build()
	File_time_series_proto = out.File
	file_time_series_proto_rawDesc = nil
	file_time_series_proto_goTypes = nil
	file_time_series_proto_depIdxs = nil
}
